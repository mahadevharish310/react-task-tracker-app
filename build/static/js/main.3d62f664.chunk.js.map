{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAddButtonClicked","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","setTasks","showAddTask","setShowAddTask","Math","round","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d62f664.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  \r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, onAddButtonClicked, showAdd }) => {\r\n  // we can destructure the props. Because its an object\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAdd ? \"black\" : \"green\"}\r\n        text={showAdd ? \"Close\" : \"Add\"}\r\n        onClick={onAddButtonClicked}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\n// it is the default props. And we can pass something if we want to overwrite it\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n};\r\n\r\n// proptypes --- make code robust\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n// CSS in JS\r\n\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black',\r\n// };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // validation for the text in the form\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    // when submitting the form we want to add the info to form\r\n    onAdd({ text, day, reminder });\r\n\r\n    // and also we want to clear the fields of the form\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n          checked={reminder}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const DUMMY_TASKS = [\n    {\n      id: 1,\n      text: \"Doctors Appoinment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"Feb 6th at 1:30pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Grocery Shopping\",\n      day: \"Feb 7th at 1:30pm\",\n      reminder: false,\n    },\n  ];\n\n  const [tasks, setTasks] = useState(DUMMY_TASKS);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  // Add Task --when submit is clicked\n  const addTask = (task) => {\n    const id = Math.round(Math.random() * 10000) + 1;\n\n    // new task object\n    const newTask = {\n      id,\n      ...task,\n    };\n\n    // changing the state makes it visible in the UI\n    setTasks([...tasks, newTask]);\n  };\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAddButtonClicked={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n\n      {/* conditional Rendering */}\n      {showAddTask && <AddTask onAdd={addTask} />}\n\n      {/* conditional Rendering */}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks to show!\"\n      )}\n    </div>\n  );\n}\n\n//  if you want a class based component\n// class App extends React.Component {\n//   render() {\n//     return <h1>Hello from a class component</h1>\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}